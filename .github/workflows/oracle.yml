on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

  push:
    branches: ['master']
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

name: oracle

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: PHP ${{ matrix.php }}-${{ matrix.oracle }}

    env:
      EXTENSIONS: pdo, pdo_oci

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest

        php:
          - '8.0'
          - '8.1'
          - '8.2'
          - '8.3'

        oracle:
          - 21

    services:
      oci:
        image: gvenzl/oracle-xe:${{ matrix.oracle }}
        ports:
          - 1521:1521
        env:
          ORACLE_DATABASE : yiitest
          ORACLE_PASSWORD : root
        options: >-
          --name=oci
          --health-cmd healthcheck.sh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout.
        uses: actions/checkout@v3

      - name: Install PHP with extensions.
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.EXTENSIONS }}
          ini-values: date.timezone='UTC'
          coverage: pcov
          tools: composer:v2, pecl

      - name: Update composer.
        run: composer self-update

      - name: Install db-oracle.
        run: composer require yiisoft/db-oracle:^1.1 --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Run oracle tests with phpunit and code coverage.
        run: vendor/bin/phpunit --testsuite Oracle --coverage-clover=coverage.xml --colors=always

      - name: Upload coverage to Codecov.
        if: matrix.php == '8.1'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
